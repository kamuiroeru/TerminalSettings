[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['md', 'markdown']

[[plugins]]
repo = 'davidhalter/jedi-vim'
hook_source = '''
    let g:jedi#completions_enabled = 0
    let g:jedi#show_call_signatures_delay = 100
    let g:jedi#show_call_signatures = 0
'''
on_ft = ['python']


[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
#depends = 'deoplete.nvim'
hook_source = '''
    let g:deoplete#sources#jedi#server_timeout=100
    let g:deoplete#sources#jedi#statement_length=100

    let s:python = system("which python")[:-2]
    let g:deoplete#sources#jedi#python_path = s:python
    if split(system("python -V"), " ")[1][0] == "3"
	let g:python3_host_prog = s:python
	let g:jedi#force_py_version = 3
    else
	let g:python_host_prog = s:python
	let g:jedi#force_py_version = 2
    endif
'''


# c/c++の補完 llvmの場所が無いとだめ
[[plugins]]
repo = 'zchee/deoplete-clang'
if = 'strlen($LLVM_ROOT)'
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
	let s:llvm_root = $LLVM_ROOT
	let g:deoplete#sources#clang#libclang_path = s:llvm_root . '/lib/libclang.dylib'
	let g:deoplete#sources#clang#clang_header = s:llvm_root . '/lib/clang'
	let g:deoplete#sources#clang#sort_algo = 'priority'
	let g:deoplete#sources#clang#clang_complete_database = "./build/"
'''
depends = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

