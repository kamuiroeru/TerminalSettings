function cdls() {
    \cd "$@" && ls
}
#alias cd=cdls

function mcdir() {
    mkdir -p $1;
    cd $1;
    }

alias apins='sudo apt-get install'
alias apgrade='sudo apt-get upgrade'
alias apdate='sudo apt-get update'
alias aprem='sudo apt-get remove'
alias aptsync='apdate && apgrade -y && sudo apt-get autoremove && sudo apt-get autoclean'

alias su='sudo su -l -p'

alias la='ls -a'
alias ll='ls -hlu'

alias gcc='gcc -std=c99'
alias g++='g++ -std=c++14 -Wall'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

alias mkdir='mkdir -p'

# sudo の後のコマンドでエイリアスを有効にする
alias sudo='sudo '

# グローバルエイリアス
alias -g L='| less'
alias -g G='| grep'
alias -g B=' 2>&1 | : &'

alias -g S='| iconv -f CP932 -t UTF8'
alias chrome='google-chrome-stable'

# C で標準出力をクリップボードにコピーする
# mollifier delta blog : http://mollifier.hatenablog.com/entry/20100317/p1
if which pbcopy >/dev/null 2>&1 ; then
# Mac
alias -g C='| pbcopy'
elif which xsel >/dev/null 2>&1 ; then
# Linux
alias -g C='| xsel --input --clipboard'
elif which putclip >/dev/null 2>&1 ; then
# Cygwin
alias -g C='| putclip'
fi

# ssh
alias sshb='ssh brain'
alias sshp='ssh raspi'
alias sshv='ssh vagrant_atMyDocument'
alias ssht='ssh titan'
alias sshs='ssh sakura'
alias sshts='ssh tfs'
alias sshtp='ssh tfp'
alias sshtop='ssh tfop'

alias sshr='ssh go'

alias sshh='ssh home'
alias sshtho='ssh tfho'

# vagrant
alias vagDup='cd ~/Documents/vagrant &&vagrant up'
alias vagDhalt='cd ~/Documents/vagrant &&vagrant halt'

# nlp
alias nlp='cd /Users/rokumura/Documents/programming/Knock100'
alias bpush='python /Users/rokumura/Documents/programming/Knock100/pushToBrain.py'
alias cnlp.sh='/usr/local/lib/stanford-corenlp-full-2016-10-31/corenlp.sh'

alias pwc='pwd | pbcopy'

alias gpom='git push origin master'

alias latexmk='latexmk -pvc'
# pyenv
alias pv='pyenv local'
alias pe='pyenv'
alias pevs='pyenv versions'
alias pel='pyenv local'

alias ptp='ptpython'

alias fp='~/.fullpath.sh'

# brainとファイルを同期
alias rscp='sh .MyRsync'

alias sr='screen -r'

alias rcp='rsync -av --progress'

# golang
alias gb='go build'
alias gr='go run'

# golang クロスコンパイル
alias wgb='GOOS=windows GOARCH=amd64 go build'
alias lgb='GOOS=linux GOARCH=amd64 go build'
alias dgb='GOOS=darwin GOARCH=amd64 go build'
